predicted <- data.frame(age = 20:75)
predicted$type <- predict(glm(type~age,data=train,family = binomial),predicted)
lines(type ~ age, predicted))
plot(type ~ age, data=train)
predicted <- data.frame(age = 20:75)
predicted$type <- predict(glm(type~age,data=train,family = binomial),predicted)
lines(type ~ age, predicted)
plot(type ~ age, data=train, ymin=-2, ymax = 2)
predicted <- data.frame(age = 20:75)
predicted$type <- predict(glm(type~age,data=train,family = binomial),predicted)
lines(type ~ age, predicted)
?plot
plot(type ~ age, data=train, ylim=c(-2,2))
predicted <- data.frame(age = 20:75)
predicted$type <- predict(glm(type~age,data=train,family = binomial),predicted)
lines(type ~ age, predicted)
?ggplot
plot(age,jitter(type),train)
plot(age,jitter(type),data=train)
plot(jitter(type) ~ age, data=train)
lines(glm(type ~ age, family=binomial,data=train))
## 1
model <- glm(vs ~ hp, data=mtcars, family=binomial)
#define new data frame that contains predictor variable
newdata <- data.frame(hp=seq(min(mtcars$hp), max(mtcars$hp),len=500))
#use fitted model to predict values of vs
newdata$vs = predict(model, newdata, type="response")
#plot logistic regression curve
plot(vs ~ hp, data=mtcars, col="steelblue")
lines(vs ~ hp, newdata, lwd=2)
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted)
lines(glm(type ~ age, family=binomial,data=train))
lines(type~age,data=predicted)
plot(type~age,data=predicted)
ggplot(train, aes(x = age, y = type)) +
geom_jitter(width = 0.5, height = 0.07, alpha = .2) +
geom_smooth(method = "glm", se = FALSE,
method.args = list(family = "binomial")) +
labs(y = expression(hat(P)(Diabetic)))
library(ggplot2)
lines(type~age,data=predicted)
ggplot(train, aes(x = age, y = type)) +
geom_jitter(width = 0.5, height = 0.07, alpha = .2) +
geom_smooth(method = "glm", se = FALSE,
method.args = list(family = "binomial")) +
labs(y = expression(hat(P)(Diabetic)))
Ex3MDL <- glm(type ~ age + bmi,data=train,family="binomial")
summary(Ex3MDL)
?predict
plot(jitter(type) ~ age, data=train)
train <- rbind(Pima.tr,Pima.tr2)
test <- Pima.te
train$type <- as.integer(train$type == "Yes")
test$type <- as.integer(test$type == "Yes")
## 2
library(viridis)
pairs(type~.,data=train,col=viridis(2)[unclass(train$type+1)])
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict.glm(glm(type ~ age, family=binomial,data=train),predicted)
lines(type~age,data=predicted)
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted)
lines(type~age,data=predicted)
?predict
print("the probability for 35 year old with a bmi of 32 to have diabetes is")
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)))
Ex3MDL <- glm(type ~ age + bmi,data=train,family="binomial")
summary(Ex3MDL)
print("the probability for 35 year old with a bmi of 32 to have diabetes is")
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)))
print("the probability for 35 year old with a bmi of 22 to have diabetes is")
predict(Ex3MDL,data.frame(bmi=c(22),age=c(35)))
?predict
print("the probability for 35 year old with a bmi of 32 to have diabetes is")
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)),type="response")
print("the probability for 35 year old with a bmi of 22 to have diabetes is")
predict(Ex3MDL,data.frame(bmi=c(22),age=c(35)),type="response")
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train,type="response"),predicted)
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted,type="response")
lines(type~age,data=predicted)
probs_to_odds(predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response"))
predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response")
odds <- predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response")/ (1-predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response"))
Ex6prediction <- predict(Ex3MDL,test,type="response")
Ex6prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(test$type,Ex6prediction)
library(caret)
Ex6prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(test$type,Ex6prediction)
Ex6prediction <- as.int(round(predict(Ex3MDL,test,type="response")))
Ex6prediction <- as.integer(round(predict(Ex3MDL,test,type="response")))
confusionMatrix(test$type,Ex6prediction)
confusionMatrix(as.factor(test$type),as.factor(Ex6prediction))
Ex6prediction <- round(predict(Ex3MDL,train,type="response"))
confusionMatrix(as.factor(train$type),as.factor(Ex6prediction))
Ex7prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(as.factor(test$type),as.factor(Ex6prediction))
Ex7prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(as.factor(test$type),as.factor(Ex7prediction))
library(ROCR)
library(caTools)
library(caret)
data("GermanCredit")
df1=GermanCredit
df1$Class=ifelse(df1$Class=="Bad",1,0)
set.seed(100)
spl=sample.split(df1$Class,SplitRatio = 0.7)
Train1=df1[spl==TRUE,]
Test1=df1[spl==FALSE,]
model1=glm(Class~.,data=Train1,family = binomial)
pred1=predict(model1,Test1)
table(Test1$Class,pred1>0.5)
## problem 2
# solution generalized to work with any seed
Test1$pred <- pred1
nrow(Test1[Test1$Class == (Test1$pred >.5),]) / nrow(Test1)
## problem 3
ROCRpred1=prediction(pred1,Test1$Class)
ROCRperf1=performance(ROCRpred1,"tpr","fpr")
plot(ROCRperf1)
#observation: the rate of true positives is higher than the rate of false positives.
## problem 4
summary(model1)
## problem 5
auc= performance(ROCRpred1,measure="auc")
auc=auc@y.values[[1]]
auc= performance(ROCRpred1,measure="auc")
?performance
?prediction
## 1
library(MASS)
train <- rbind(Pima.tr,Pima.tr2)
test <- Pima.te
train$type <- as.integer(train$type == "Yes")
test$type <- as.integer(test$type == "Yes")
## 2
library(viridis)
pairs(type~.,data=train,col=viridis(2)[unclass(train$type+1)])
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted,type="response")
lines(type~age,data=predicted)
## 3
Ex3MDL <- glm(type ~ age + bmi,data=train,family="binomial")
summary(Ex3MDL)
## 4
# the probability for 35 year old with a bmi of 32 to have diabetes is 0.3470908
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)),type="response")
# the probability for 35 year old with a bmi of 22 to have diabetes is 0.1600962
predict(Ex3MDL,data.frame(bmi=c(22),age=c(35)),type="response")
## 5
odds <- predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response")/ (1-predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response"))
## 6
library(caret)
Ex6prediction <- round(predict(Ex3MDL,train,type="response"))
confusionMatrix(as.factor(train$type),as.factor(Ex6prediction))
## 7
Ex7prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(as.factor(test$type),as.factor(Ex7prediction))
## 8
plot(performance(prediction(Ex7prediction,Test$type),"tpr","fpr"))
plot(performance(prediction(Ex7prediction,test$type),"tpr","fpr"))
library(ROCR)
plot(performance(prediction(Ex7prediction,test$type),"tpr","fpr"))
View(test)
View(train)
sum(is.na(train))
sum(is.na(train$bmi))
sum(is.na(train$age))
boxplot((train$bmi))
train$bmi[is.na(train$bmi)] <- average(train$bmi)
train$bmi[is.na(train$bmi)] <- median(train$bmi)
## 1
library(MASS)
train <- rbind(Pima.tr,Pima.tr2)
test <- Pima.te
train$type <- as.integer(train$type == "Yes")
test$type <- as.integer(test$type == "Yes")
## 2
library(viridis)
pairs(type~.,data=train,col=viridis(2)[unclass(train$type+1)])
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted,type="response")
lines(type~age,data=predicted)
## 3
train$bmi[is.na(train$bmi)] <- median(train$bmi)
Ex3MDL <- glm(type ~ age + bmi,data=train,family="binomial")
summary(Ex3MDL)
## 4
# the probability for 35 year old with a bmi of 32 to have diabetes is 0.3470908
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)),type="response")
# the probability for 35 year old with a bmi of 22 to have diabetes is 0.1600962
predict(Ex3MDL,data.frame(bmi=c(22),age=c(35)),type="response")
## 5
odds <- predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response")/ (1-predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response"))
## 6
library(caret)
Ex6prediction <- round(predict(Ex3MDL,train,type="response"))
confusionMatrix(as.factor(train$type),as.factor(Ex6prediction))
## 7
Ex7prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(as.factor(test$type),as.factor(Ex7prediction))
## 8
library(ROCR)
plot(performance(prediction(Ex7prediction,test$type),"tpr","fpr"))
# Statistics section
# Exercise 5: Model evauation part 2
## problem 1
library(ROCR)
library(caTools)
library(caret)
data("GermanCredit")
df1=GermanCredit
df1$Class=ifelse(df1$Class=="Bad",1,0)
set.seed(100)
spl=sample.split(df1$Class,SplitRatio = 0.7)
Train1=df1[spl==TRUE,]
Test1=df1[spl==FALSE,]
model1=glm(Class~.,data=Train1,family = binomial)
pred1=predict(model1,Test1)
table(Test1$Class,pred1>0.5)
## problem 2
# solution generalized to work with any seed
Test1$pred <- pred1
nrow(Test1[Test1$Class == (Test1$pred >.5),]) / nrow(Test1)
## problem 3
ROCRpred1=prediction(pred1,Test1$Class)
ROCRperf1=performance(ROCRpred1,"tpr","fpr")
plot(ROCRperf1)
## 1
library(MASS)
train <- rbind(Pima.tr,Pima.tr2)
test <- Pima.te
train$type <- as.integer(train$type == "Yes")
test$type <- as.integer(test$type == "Yes")
## 2
library(viridis)
pairs(type~.,data=train,col=viridis(2)[unclass(train$type+1)])
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted,type="response")
lines(type~age,data=predicted)
## 3
train$bmi[is.na(train$bmi)] <- median(train$bmi)
Ex3MDL <- glm(type ~ age + bmi,data=train,family="binomial")
summary(Ex3MDL)
## 4
# the probability for 35 year old with a bmi of 32 to have diabetes is 0.3470908
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)),type="response")
# the probability for 35 year old with a bmi of 22 to have diabetes is 0.1600962
predict(Ex3MDL,data.frame(bmi=c(22),age=c(35)),type="response")
## 5
odds <- predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response")/ (1-predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response"))
## 6
library(caret)
Ex6prediction <- round(predict(Ex3MDL,train,type="response"))
confusionMatrix(as.factor(train$type),as.factor(Ex6prediction))
## 7
Ex7prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(as.factor(test$type),as.factor(Ex7prediction))
## 8
library(ROCR)
Ex7prediction <- round(predict(Ex3MDL,test))
plot(performance(prediction(Ex7prediction,test$type),"tpr","fpr"))
?lgs_fun
## 1
library(MASS)
train <- rbind(Pima.tr,Pima.tr2)
test <- Pima.te
train$type <- as.integer(train$type == "Yes")
test$type <- as.integer(test$type == "Yes")
## 2
library(viridis)
pairs(type~.,data=train,col=viridis(2)[unclass(train$type+1)])
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted,type="response")
lines(type~age,data=predicted)
## 3
train$bmi[is.na(train$bmi)] <- median(train$bmi)
Ex3MDL <- glm(type ~ age + bmi,data=train,family="binomial")
summary(Ex3MDL)
## 4
# the probability for 35 year old with a bmi of 32 to have diabetes is 0.3470908
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)),type="response")
# the probability for 35 year old with a bmi of 22 to have diabetes is 0.1600962
predict(Ex3MDL,data.frame(bmi=c(22),age=c(35)),type="response")
## 5
odds <- predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response")/ (1-predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response"))
## 6
library(caret)
Ex6prediction <- round(predict(Ex3MDL,train,type="response"))
confusionMatrix(as.factor(train$type),as.factor(Ex6prediction))
## 7
Ex7prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(as.factor(test$type),as.factor(Ex7prediction))
## 8
library(ROCR)
plot(performance(prediction(Ex7prediction,test$type),"tpr","fpr"))
performance(prediction(Ex7prediction,test$type),"auc")
Ex8MDLPred <- prediction(Ex7prediction,test$type)
plot(performance(Ex8MDLPred,"tpr","fpr"))
Ex8AUC <- performance(Ex8MDLPred,"auc")
Ex8AUC@y.values
Ex7prediction <- round(predict(Ex3MDL,test))
Ex8MDLPred <- prediction(Ex7prediction,test$type)
plot(performance(Ex8MDLPred,"tpr","fpr"))
Ex8AUC <- performance(Ex8MDLPred,"auc")
Ex8AUC@y.values
Ex7prediction <- predict(Ex3MDL,test)
Ex8MDLPred <- prediction(Ex7prediction,test$type)
plot(performance(Ex8MDLPred,"tpr","fpr"))
Ex8AUC <- performance(Ex8MDLPred,"auc")
Ex8AUC@y.values
Ex8prediction <- predict(Ex3MDL,test)
Ex8MDLPred <- prediction(Ex8prediction,test$type)
plot(performance(Ex8MDLPred,"tpr","fpr"))
Ex8AUC <- performance(Ex8MDLPred,"auc")
Ex8AUC@y.values
Ex9MDL <- glm(type ~ age + bmi + npreg + ploy(age, 2),data=train,family="binomial")
Ex9MDL <- glm(type ~ age + bmi + npreg + poly(age, 2),data=train,family="binomial")
Ex9prediction <- predict(Ex9MDL,test)
Ex9MDLPred <- prediction(Ex9prediction,test$type)
#draws ROC curve
plot(performance(Ex9MDLPred,"tpr","fpr"))
Ex9AUC <- performance(Ex9MDLPred,"auc")
#finds AUC
Ex9AUC@y.values
predict(Ex9MDL,data.frame(age=c(35),bmi=c(35),npreg(2)))
predict(Ex9MDL,data.frame(age=c(35),bmi=c(35),npreg=c(2)))
predict(Ex9MDL,data.frame(age=c(35),bmi=c(25),npreg=c(2)))
predict(Ex9MDL,data.frame(age=c(35),bmi=c(35),npreg=c(2)),type="response")
predict(Ex9MDL,data.frame(age=c(35),bmi=c(25),npreg=c(2)),type="response")
Ex9MDL$coefficients
-5.61484160 + .05032794 * 35 -7.41578020 * 35^2 +0.03612378 * 2
poly(1,2)
poly(3,2)
Ex9MDL <- glm(type ~ age + bmi + npreg + age * age,data=train,family="binomial")
Ex9MDL$coefficients
?I
Ex9MDL <- glm(type ~ age + bmi + npreg + I(age^2),data=train,family="binomial")
Ex9prediction <- predict(Ex9MDL,test)
Ex9MDLPred <- prediction(Ex9prediction,test$type)
#draws ROC curve
plot(performance(Ex9MDLPred,"tpr","fpr"))
Ex9AUC <- performance(Ex9MDLPred,"auc")
#finds AUC
Ex9AUC@y.values
predict(Ex9MDL,data.frame(age=c(35),bmi=c(35),npreg=c(2)),type="response")
predict(Ex9MDL,data.frame(age=c(35),bmi=c(25),npreg=c(2)),type="response")
Ex9MDL$coefficients
-8.804622434 + 0.234143632 * 35 -0.002355526  * 35^2 +0.036123777 * 2
(0.0949549 e^(3.42287 - 0.0949549 * 25))/(1 + e^(3.42287 - 0.0949549 * 25))^2
(0.0949549 * e^(3.42287 - 0.0949549 * 25))/(1 + e^(3.42287 - 0.0949549 * 25))^2
(0.0949549 * exp(3.42287 - 0.0949549 * 25))/(1 + exp(3.42287 - 0.0949549 * 25))^2
## 1
library(MASS)
train <- rbind(Pima.tr,Pima.tr2)
test <- Pima.te
train$type <- as.integer(train$type == "Yes")
test$type <- as.integer(test$type == "Yes")
## 2
library(viridis)
pairs(type~.,data=train,col=viridis(2)[unclass(train$type+1)])
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted,type="response")
lines(type~age,data=predicted)
## 3
train$bmi[is.na(train$bmi)] <- median(train$bmi)
Ex3MDL <- glm(type ~ age + bmi,data=train,family="binomial")
summary(Ex3MDL)
## 4
# the probability for 35 year old with a bmi of 32 to have diabetes is 0.3470908
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)),type="response")
# the probability for 35 year old with a bmi of 22 to have diabetes is 0.1600962
predict(Ex3MDL,data.frame(bmi=c(22),age=c(35)),type="response")
## 5
odds <- predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response")/ (1-predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response"))
## 6
library(caret)
Ex6prediction <- round(predict(Ex3MDL,train,type="response"))
confusionMatrix(as.factor(train$type),as.factor(Ex6prediction))
## 7
Ex7prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(as.factor(test$type),as.factor(Ex7prediction))
## 8
library(ROCR)
Ex8prediction <- predict(Ex3MDL,test)
Ex8MDLPred <- prediction(Ex8prediction,test$type)
#draws ROC curve
plot(performance(Ex8MDLPred,"tpr","fpr"))
Ex8AUC <- performance(Ex8MDLPred,"auc")
#finds AUC
Ex8AUC@y.values
## 9
Ex9MDL <- glm(type ~ age + bmi + npreg + I(age^2),data=train,family="binomial")
Ex9prediction <- predict(Ex9MDL,test)
Ex9MDLPred <- prediction(Ex9prediction,test$type)
#draws ROC curve
plot(performance(Ex9MDLPred,"tpr","fpr"))
Ex9AUC <- performance(Ex9MDLPred,"auc")
#finds AUC
Ex9AUC@y.values
predict(Ex9MDL,data.frame(age=c(35),bmi=c(35),npreg=c(2)),type="response")
predict(Ex9MDL,data.frame(age=c(35),bmi=c(25),npreg=c(2)),type="response")
#Observation, according to the model, a 35 year old mother of two increases her probability of having diabeties from 25.94182% to  47.51591% when increasing her bmi to 35 from 25
##to find the marginal effect of bmi, for the woman in question at bmi = 25, we may use the following functions
## P(diabeties) = 1/(1+e^(-.095 * bmi + beta0 + beta1+...))
## d/d(bmi) P(diabeties) = 1/(1+e^-(.095 * bmi + beta0 + beta1+...)) d/d(bmi)
## d/d(bmi) P(diabeties) = 1/(1+e^-(.095 * bmi -8.804622434 + 0.234143632 * 35 -0.002355526  * 35^2 +0.036123777 * 2)) d/d(bmi)
## d/d(bmi) P(diabeties) = 1/(1+e^-(.095 * bmi -8.804622434 + 0.234143632 * 35 -0.002355526  * 35^2 +0.036123777 * 2)) d/d(bmi)
## P'(diabeties) = (0.0949549 e^(3.42287 - 0.0949549 * bmi))/(1 + e^(3.42287 - 0.0949549 * bmi))^2
##thus, when bmi = 25
##P'(diabeties| bmi = 25) = 0.01824275
## 1
library(MASS)
train <- rbind(Pima.tr,Pima.tr2)
test <- Pima.te
train$type <- as.integer(train$type == "Yes")
test$type <- as.integer(test$type == "Yes")
## 2
library(viridis)
pairs(type~.,data=train,col=viridis(2)[unclass(train$type+1)])
plot(jitter(type) ~ age, data=train)
predicted <- data.frame(age=20:75)
predicted$type <- predict(glm(type ~ age, family=binomial,data=train),predicted,type="response")
lines(type~age,data=predicted)
## 3
train$bmi[is.na(train$bmi)] <- median(train$bmi)
Ex3MDL <- glm(type ~ age + bmi,data=train,family="binomial")
summary(Ex3MDL)
## 4
# the probability for 35 year old with a bmi of 32 to have diabetes is 0.3470908
predict(Ex3MDL,data.frame(bmi=c(32),age=c(35)),type="response")
# the probability for 35 year old with a bmi of 22 to have diabetes is 0.1600962
predict(Ex3MDL,data.frame(bmi=c(22),age=c(35)),type="response")
## 5
odds <- predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response")/ (1-predict(Ex3MDL,data.frame(bmi=c(37),age=c(55)),type="response"))
## 6
library(caret)
Ex6prediction <- round(predict(Ex3MDL,train,type="response"))
confusionMatrix(as.factor(train$type),as.factor(Ex6prediction))
## 7
Ex7prediction <- round(predict(Ex3MDL,test,type="response"))
confusionMatrix(as.factor(test$type),as.factor(Ex7prediction))
## 8
library(ROCR)
Ex8prediction <- predict(Ex3MDL,test)
Ex8MDLPred <- prediction(Ex8prediction,test$type)
#draws ROC curve
plot(performance(Ex8MDLPred,"tpr","fpr"))
Ex8AUC <- performance(Ex8MDLPred,"auc")
#finds AUC
Ex8AUC@y.values
## 9
Ex9MDL <- glm(type ~ age + bmi + npreg + I(age^2),data=train,family="binomial")
Ex9prediction <- predict(Ex9MDL,test)
Ex9MDLPred <- prediction(Ex9prediction,test$type)
#draws ROC curve
plot(performance(Ex9MDLPred,"tpr","fpr"))
Ex9AUC <- performance(Ex9MDLPred,"auc")
#finds AUC
Ex9AUC@y.values
predict(Ex9MDL,data.frame(age=c(35),bmi=c(35),npreg=c(2)),type="response")
predict(Ex9MDL,data.frame(age=c(35),bmi=c(25),npreg=c(2)),type="response")
#Observation, according to the model, a 35 year old mother of two increases her probability of having diabeties from 25.94182% to  47.51591% when increasing her bmi to 35 from 25
##to find the marginal effect of bmi, for the woman in question at bmi = 25, we may use the following functions
## P(diabeties) = 1/(1+e^(-.095 * bmi + beta0 + beta1+...))
## d/d(bmi) P(diabeties) = 1/(1+e^-(.095 * bmi + beta0 + beta1+...)) d/d(bmi)
## d/d(bmi) P(diabeties) = 1/(1+e^-(.095 * bmi -8.804622434 + 0.234143632 * 35 -0.002355526  * 35^2 +0.036123777 * 2)) d/d(bmi)
## d/d(bmi) P(diabeties) = 1/(1+e^-(.095 * bmi -8.804622434 + 0.234143632 * 35 -0.002355526  * 35^2 +0.036123777 * 2)) d/d(bmi)
## P'(diabeties) = (0.0949549 e^(3.42287 - 0.0949549 * bmi))/(1 + e^(3.42287 - 0.0949549 * bmi))^2
##thus, when bmi = 25
##P'(diabeties| bmi = 25) = 0.01824275
## 1
setwd("/home/marcus/Documents/Rwork/R exercises/")
Data <- read.csv("moth-trap-experiment.csv")
library(dplyr)
library(viridis)
library(car)
library(pwr)
## 2
aggregate(Data[,c("location","number.of.moths")],list(Data$location),summary)
## 3
aggregate(Data[,c("type.of.lure","number.of.moths")],list(Data$type.of.lure),summary)
## 4
boxplot(number.of.moths~location+type.of.lure,data=Data,col=viridis(4),xlab="Lure",ylab="Number of Moths",names=rep(levels(factor(Data$type.of.lure)),each=4))
legend(x="topleft",legend = levels(factor(Data$location)),fill=viridis(4))
## 5
shapiro.test(Data$number.of.moths)
## 6
leveneTest(number.of.moths ~ location * type.of.lure,data = Data)
## 7
log.number.of.moths <- log(Data$number.of.moths)
shapiro.test(log.number.of.moths)
leveneTest(log.number.of.moths ~ location * type.of.lure,data = Data)
## 8
pwr.f2.test(u = 3, v = 4, f2=.3^2)
## 9
Model <- aov(log.number.of.moths ~ location * type.of.lure, data = Data)
##10
plot(Model)
